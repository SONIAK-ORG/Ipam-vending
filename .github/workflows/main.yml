name: "Deploy New Landing Zone"

on:
  workflow_dispatch:
    inputs:
      ipamUrl:
        description: 'IPAM URL'
        required: true
        default: 'https://ipam-qyquwdrrjdtxe.azurewebsites.net/api/spaces/Test-bloc-space/blocks/Test-Block/reservations'
      ipamSize:
        description: 'IPAM Size'
        required: true
        default: '24' # This will reserve the next available /24 address space from the Azure IPAM block in IPAM_URL

permissions:
  id-token: write
  contents: read

jobs:
  Deploy_New_LandingZone:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: OIDC Login To Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Get Available Address Space From IPAM
        id: getipam
        uses: azure/powershell@v1
        with:
          inlineScript: |
            $scriptPath = "/home/runner/work/Ipam-vending/Ipam-vending/Pipeline-scripts/fetchAddressPrefix.ps1"
            $ipamApiScope = "${{ secrets.IPAM_API_SCOPE }}"
            $ipamUrl = "${{ github.event.inputs.ipamUrl }}"
            $ipamSize = ${{ github.event.inputs.ipamSize }}
            Write-Host "Using IPAM API Scope: $ipamApiScope"
            Write-Host "Using IPAM URL: $ipamUrl"
            Write-Host "Requested IPAM Size: $ipamSize"
            & pwsh $scriptPath -IPAM_API_SCOPE "$ipamApiScope" -IPAM_URL "$ipamUrl" -IPAM_SIZE $ipamSize
          azPSVersion: "latest"


      - name: Setup Terraform (Pinned Version)
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.7.3" 
          
      - name: Set up environment variables for subsequent steps
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}" >> $GITHUB_ENV

      - name: Terraform Init
        run: terraform init
        working-directory: /home/runner/work/Ipam-vending/Ipam-vending/Terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}


      - name: Create Terraform Execution Plan
        run: |
          terraform plan -out=tfplan \
            -var "vnet_tag=${{ steps.getipam.outputs.id }}" \
            -var 'address_prefix=["${{ steps.getipam.outputs.cidr }}"]'
        working-directory: /home/runner/work/Ipam-vending/Ipam-vending/Terraform

      - name: Apply Terraform Plan
        run: |
          terraform apply -auto-approve tfplan
        working-directory: /home/runner/work/Ipam-vending/Ipam-vending/Terraform


