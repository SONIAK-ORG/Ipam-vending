name: "Deploy New Landing Zone"

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      ipamApiScope:
        description: 'IPAM API Scope'
        required: true
        default: '' # Example: 'https://api.ipam.example/scope'
      ipamUrl:
        description: 'IPAM URL'
        required: true
        default: 'https://ipam-xxxx.azurewebsites.net/api/spaces/CorpSpace/blocks/CorpBlockWestEurope01/reservations'
      ipamSize:
        description: 'IPAM Size'
        required: false
        default: '24' # This will reserve the next available /24 address space from the Azure IPAM block in IPAM_URL

permissions:
  id-token: write
  contents: read


#These environment variables are used by the terraform azure provider to setup OIDD authenticate. 
env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"

jobs:
  Deploy_New_LandingZone:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0


      - name: List the contents of the Ipam-vending directory
        run: ls -la /home/runner/work/Ipam-vending/Ipam-vending/

      - name: Get Available Address Space From IPAM
        id: getipam
        uses: azure/powershell@v1
        with:
          inlineScript: |
            $scriptPath = "/home/runner/work/Ipam-vending/Ipam-vending/Pipeline-scripts/fetchAddressPrefix.ps1"
            & pwsh $scriptPath -IPAM_API_SCOPE "${{ github.event.inputs.ipamApiScope }}" -IPAM_URL "${{ github.event.inputs.ipamUrl }}" -IPAM_SIZE ${{ github.event.inputs.ipamSize }}
          azPSVersion: "latest"

      - name: Setup Terraform (Pinned Version)
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.7.5" # Example version, adjust as needed

      - name: Initialize Terraform
        run: terraform init
        working-directory: /home/runner/work/Ipam-vending/Ipam-vending/Terraform

      - name: Create Terraform Execution Plan
        run: |
          terraform plan -out=tfplan \
            -var "vnet_tag=${{ steps.getipam.outputs.id }}" \
            -var "address_prefix=${{ steps.getipam.outputs.cidr }}"
        working-directory: /home/runner/work/Ipam-vending/Ipam-vending/Terraform

      - name: Apply Terraform Plan
        run: terraform apply -auto-approve tfplan
        working-directory: /home/runner/work/Ipam-vending/Ipam-vending/Terraform

